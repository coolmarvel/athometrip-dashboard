import { DatePickerOptions, PageOptions, ResponsiveLayout, Search, ViewOptions } from '@/components';
import { ApiRoutes, ViewQueries } from '@/constants';
import { Memorial911ByPage } from '@/containers';
import { useSafePush } from '@/hooks';
import { Flex } from '@chakra-ui/react';
import { useQueryClient } from '@tanstack/react-query';
import Head from 'next/head';
import { useMemo } from 'react';

const Memorials911Page = () => {
  const { router, push } = useSafePush();
  const viewOption = router.query?.view as ViewQueries;

  const display = useMemo(() => {
    switch (viewOption) {
      case ViewQueries.Table:
        return <Memorial911ByPage />;
      case ViewQueries.List:
        return '<Memorial911Page usesObserver />';
      default:
        return null;
    }
  }, [viewOption]);

  const queryClient = useQueryClient();

  const handleReset = async () => {
    console.log('handleReset clicked');
    await queryClient.resetQueries(
      [
        'api/tickets/911-memorial',
        {
          page: router.query.page,
          limit: router.query.limit,
          sort: router.query.sort,
          order: router.query.order,
          startDate: router.query.startDate,
          endDate: router.query.endDate,
          search: router.query.search,
        },
      ],
      { exact: true }
    );
  };

  const handleRemove = () => {
    console.log('handleRemove clicked');
    queryClient.removeQueries(
      [
        'api/tickets/911-memorial',
        {
          page: router.query.page,
          limit: router.query.limit,
          sort: router.query.sort,
          order: router.query.order,
          startDate: router.query.startDate,
          endDate: router.query.endDate,
          search: router.query.search,
        },
      ],
      { exact: true }
    );
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ResponsiveLayout>
        <Flex direction={'column'} gap={'4'} h={'100%'}>
          {/* <Memorial911Utils /> */}
          <Flex justifyContent={'space-between'} gap={'4'} wrap={'wrap'}>
            <Search
              onSubmit={(search) => {
                push({ pathname: router.pathname, query: { ...router.query, search } });
              }}
            />
            <Flex gap={'4'}>
              {/* <ViewOptions /> */}
              <button type="button" onClick={() => handleReset()}>
                RESET
              </button>
              <button type="button" onClick={() => handleRemove()}>
                REMOVE
              </button>
              <DatePickerOptions />
              <PageOptions />
            </Flex>
          </Flex>
          {display}
        </Flex>
      </ResponsiveLayout>
    </>
  );
};

export default Memorials911Page;
